/* XDash is an interactive console-based program to manipulate the Xbox 360 
\  While XDash is a text based menu system, it can do everything a GUI 
\  Can do. XDash can set the front panel LED color, print a 
\  live display of the hardware temperature, and shutdown the console.
\
\  XDash is still in early development but should be reletively bug free, if
\  there is a bug in the code however, feel free to notify me at:
\  tylerjkuck@gmail.com
\
\  Please enjoy XDash, and feel free to edit this source code as you see fit!
\  Just remember to give proper credit where credit is due.
\
\  Written by UNIX:
\  LibXenon.org
*/

// Include the include file
#include "main.h"

// Make available 100MB for thread stacks
int stack_size = 0x6400000;

// Void pointers for our thread stacks
void *stack_1;
void *stack_2;
void *stack_3;

// Thread integers
int thread_1 = 1;
int thread_2 = 2;
int thread_3 = 3;

// TODO: Clean this up: get rid of redundancy, comment.
/*void getInput(){
	struct controller_data_s controller;
	while(1){
		struct controller_data_s button;
 		if (get_controller_data(&button, 0))
 		{
			if((button.start)&&(!controller.start))
			{
				clearScreen();
				reDash();
			}
			if((button.x)&&(!controller.x))
			{
				printTemperatures();
			}
			if((button.y)&&(!controller.y))
			{
				clearScreen();
			}
			if((button.b)&&(!controller.b))
			{
				clearScreen();
				shutdownConsole();
			}											  
			controller=button;
		}
 		usb_do_poll();
 	}
}*/

int main(){
	// Initialize stacks
	stack_1 = malloc(sizeof(stack_size));
	stack_2 = malloc(sizeof(stack_size));

	// Initiate threads
	xenon_thread_startup();

	// Start a thread to run VL.
	xenon_run_thread_task(thread_1, stack_1, verificationLoader());

	// Start a thread to execute GUI.
	// xenon_run_thread_task(thread_2, stack_2, dashboard());

	return 0;
}

